import unittest
from lexeur.lexeur import lexical_analysis
from parseur.ast_pars import parse, construire_arbre
from parseur.table_syntaxique import table_syntaxique
from parseur.ast_pars import elaguer_arbre, remonter_feuilles, remove_unless_node, remonter_param, \
    remove_intermediary_node
import parseur.show as show


class MyTestCase(unittest.TestCase):
    def test_lexeur(self):
        with open("tests/test_lexeur/test1.txt") as f:
            file = f.read()

        lexical_table = {
            0: ["access", "and", "begin", "else", "elsif", "end", "false", "for", "function", "if", "in", "is",
                "loop", "new", "not", "null", "or", "out", "procedure", "record", "rem", "return", "reverse",
                "then", "true", "type", "use", "while", "with", "character", "kteger", "ada.text_io", "eof"],
            1: ["+", "-", "*", "/", "<", ">", "<=", ">=", "=", "/=", "=>", ".", ":=", "..", "-"],
            # le second moins est le moins unaire
            2: ["!", chr(34), "#", "$", "%", "&", "'", "(", ")", ",", ":", ";", "?", "@", "[", chr(92), "]", "^",
                "_", "`", "{", "|", "}", "~"],
            3: ['undebut', 'airerectangle', 'larg', 'integer', 'long', 'aire', 'perimetrerectangle', 'p', 'choix',
                'valeur', 'put', 'airerectangale'], 4: [2, 1, 3], 5: []}

        token = [(0, 28, 2), (0, 31, 2), (2, 11, 2), (0, 26, 2), (0, 31, 2), (2, 11, 2), (0, 18, 3), (3, 0, 3),
                 (0, 11, 3), (0, 8, 4), (3, 1, 4), (2, 7, 4), (3, 2, 4), (2, 10, 4), (3, 3, 4), (2, 11, 4), (3, 4, 4),
                 (2, 10, 4), (3, 3, 4), (2, 8, 4), (0, 21, 4), (3, 3, 4), (0, 11, 4), (3, 5, 4), (2, 10, 4), (3, 3, 4),
                 (2, 11, 4), (0, 2, 5), (3, 5, 6), (1, 12, 6), (3, 2, 6), (1, 2, 6), (3, 4, 6), (2, 11, 6), (0, 21, 7),
                 (3, 5, 7), (2, 11, 7), (0, 5, 8), (3, 1, 8), (2, 11, 8), (0, 8, 9), (3, 6, 9), (2, 7, 9), (3, 2, 9),
                 (2, 10, 9), (3, 3, 9), (2, 11, 9), (3, 4, 9), (2, 10, 9), (3, 3, 9), (2, 8, 9), (0, 21, 9), (3, 3, 9),
                 (0, 11, 9), (3, 7, 9), (2, 10, 9), (3, 3, 9), (2, 11, 9), (0, 2, 10), (3, 7, 11), (1, 12, 11),
                 (3, 2, 11), (1, 2, 11), (4, 0, 11), (1, 0, 11), (3, 4, 11), (1, 2, 11), (4, 0, 11), (2, 11, 11),
                 (0, 21, 12), (3, 7, 12), (2, 11, 12), (0, 5, 13), (3, 6, 13), (2, 11, 13), (3, 8, 15), (2, 10, 15),
                 (3, 3, 15), (2, 11, 15), (0, 2, 17), (3, 8, 18), (1, 12, 18), (4, 0, 18), (2, 11, 18), (0, 9, 19),
                 (3, 8, 19), (1, 8, 19), (4, 1, 19), (0, 23, 20), (3, 9, 20), (1, 12, 20), (3, 6, 20), (2, 7, 20),
                 (4, 0, 20), (2, 9, 20), (4, 2, 20), (2, 8, 20), (2, 11, 20), (3, 10, 21), (2, 7, 21), (3, 9, 21),
                 (2, 8, 21), (2, 11, 21), (0, 3, 22), (3, 9, 22), (1, 12, 22), (3, 11, 22), (2, 7, 22), (4, 0, 22),
                 (2, 9, 22), (4, 2, 22), (2, 8, 22), (2, 11, 22), (3, 10, 23), (2, 7, 23), (3, 9, 23), (2, 8, 23),
                 (2, 11, 23), (0, 5, 24), (0, 9, 24), (2, 11, 24), (0, 5, 25), (3, 0, 25), (2, 11, 25), (0, 32, 25)]

        tok, lex = lexical_analysis(file)

        self.assertEqual(tok, token)
        self.assertEqual(lex, lexical_table)

    def test_parseur(self):
        lexical_table = {
            0: ["access", "and", "begin", "else", "elsif", "end", "false", "for", "function", "if", "in", "is",
                "loop", "new", "not", "null", "or", "out", "procedure", "record", "rem", "return", "reverse",
                "then", "true", "type", "use", "while", "with", "character", "kteger", "ada.text_io", "eof"],
            1: ["+", "-", "*", "/", "<", ">", "<=", ">=", "=", "/=", "=>", ".", ":=", "..", "-"],
            # le second moins est le moins unaire
            2: ["!", chr(34), "#", "$", "%", "&", "'", "(", ")", ",", ":", ";", "?", "@", "[", chr(92), "]", "^",
                "_", "`", "{", "|", "}", "~"],
            3: ['undebut', 'airerectangle', 'larg', 'integer', 'long', 'aire', 'perimetrerectangle', 'p', 'choix',
                'valeur', 'put', 'airerectangale'], 4: [2, 1, 3], 5: []}

        token = [(0, 28, 2), (0, 31, 2), (2, 11, 2), (0, 26, 2), (0, 31, 2), (2, 11, 2), (0, 18, 3), (3, 0, 3),
                 (0, 11, 3), (0, 8, 4), (3, 1, 4), (2, 7, 4), (3, 2, 4), (2, 10, 4), (3, 3, 4), (2, 11, 4), (3, 4, 4),
                 (2, 10, 4), (3, 3, 4), (2, 8, 4), (0, 21, 4), (3, 3, 4), (0, 11, 4), (3, 5, 4), (2, 10, 4), (3, 3, 4),
                 (2, 11, 4), (0, 2, 5), (3, 5, 6), (1, 12, 6), (3, 2, 6), (1, 2, 6), (3, 4, 6), (2, 11, 6), (0, 21, 7),
                 (3, 5, 7), (2, 11, 7), (0, 5, 8), (3, 1, 8), (2, 11, 8), (0, 8, 9), (3, 6, 9), (2, 7, 9), (3, 2, 9),
                 (2, 10, 9), (3, 3, 9), (2, 11, 9), (3, 4, 9), (2, 10, 9), (3, 3, 9), (2, 8, 9), (0, 21, 9), (3, 3, 9),
                 (0, 11, 9), (3, 7, 9), (2, 10, 9), (3, 3, 9), (2, 11, 9), (0, 2, 10), (3, 7, 11), (1, 12, 11),
                 (3, 2, 11), (1, 2, 11), (4, 0, 11), (1, 0, 11), (3, 4, 11), (1, 2, 11), (4, 0, 11), (2, 11, 11),
                 (0, 21, 12), (3, 7, 12), (2, 11, 12), (0, 5, 13), (3, 6, 13), (2, 11, 13), (3, 8, 15), (2, 10, 15),
                 (3, 3, 15), (2, 11, 15), (0, 2, 17), (3, 8, 18), (1, 12, 18), (4, 0, 18), (2, 11, 18), (0, 9, 19),
                 (3, 8, 19), (1, 8, 19), (4, 1, 19), (0, 23, 20), (3, 9, 20), (1, 12, 20), (3, 6, 20), (2, 7, 20),
                 (4, 0, 20), (2, 9, 20), (4, 2, 20), (2, 8, 20), (2, 11, 20), (3, 10, 21), (2, 7, 21), (3, 9, 21),
                 (2, 8, 21), (2, 11, 21), (0, 3, 22), (3, 9, 22), (1, 12, 22), (3, 11, 22), (2, 7, 22), (4, 0, 22),
                 (2, 9, 22), (4, 2, 22), (2, 8, 22), (2, 11, 22), (3, 10, 23), (2, 7, 23), (3, 9, 23), (2, 8, 23),
                 (2, 11, 23), (0, 5, 24), (0, 9, 24), (2, 11, 24), (0, 5, 25), (3, 0, 25), (2, 11, 25), (0, 32, 25)]

        parse_res = [['F', [(0, 32), (2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2), 'DECL_STAR', (0, 11), 'IDENT',
                            (0, 18), (2, 11), (0, 31), (0, 26), (2, 11), (0, 31), (0, 28)]], [(0, 28), 'with'],
                     [(0, 31), 'ada.text_io'], [(2, 11), ';'], [(0, 26), 'use'], [(0, 31), 'ada.text_io'],
                     [(2, 11), ';'], [(0, 18), 'procedure'], ['IDENT', [(3, 0)]], [(3, 0), 'undebut'], [(0, 11), 'is'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], ['PARAMS_BIN', ['PARAMS']],
                     ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'],
                     ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'],
                     ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]],
                     [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ['PARAMS_BIN', ['PARAMS']], ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", ["OPE5'", 'OPE6', 'ADD']], ['ADD', [(1, 0)]], [(1, 0), '+'],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]], [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR',
                                                                [(2, 11), (0, 9), (0, 5), 'ELSE_BIN', 'ELSIF_STAR',
                                                                 'INSTR_PLUS', (0, 23), 'EXPR', (0, 9)]],
                     [(0, 9), 'if'], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'choix'], ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", ["OPE3'", 'OPE4', 'EGAL']], ['EGAL', [(1, 8)]], [(1, 8), '='],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 1],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(0, 23), 'then'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], ['ELSIF_STAR', 'epsilon'], ['ELSE_BIN', ['INSTR_PLUS', (0, 3)]],
                     [(0, 3), 'else'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangale'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], [(0, 9), 'if'], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'undebut'], [(2, 11), ';']]

        self.assertEqual(parse_res, parse(token, lexical_table, table_syntaxique))

    def test_ast(self):
        parse_res = [['F', [(0, 32), (2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2), 'DECL_STAR', (0, 11), 'IDENT',
                            (0, 18), (2, 11), (0, 31), (0, 26), (2, 11), (0, 31), (0, 28)]], [(0, 28), 'with'],
                     [(0, 31), 'ada.text_io'], [(2, 11), ';'], [(0, 26), 'use'], [(0, 31), 'ada.text_io'],
                     [(2, 11), ';'], [(0, 18), 'procedure'], ['IDENT', [(3, 0)]], [(3, 0), 'undebut'], [(0, 11), 'is'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], ['PARAMS_BIN', ['PARAMS']],
                     ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'],
                     ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'],
                     ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]],
                     [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ['PARAMS_BIN', ['PARAMS']], ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", ["OPE5'", 'OPE6', 'ADD']], ['ADD', [(1, 0)]], [(1, 0), '+'],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]], [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR',
                                                                [(2, 11), (0, 9), (0, 5), 'ELSE_BIN', 'ELSIF_STAR',
                                                                 'INSTR_PLUS', (0, 23), 'EXPR', (0, 9)]],
                     [(0, 9), 'if'], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'choix'], ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", ["OPE3'", 'OPE4', 'EGAL']], ['EGAL', [(1, 8)]], [(1, 8), '='],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 1],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(0, 23), 'then'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], ['ELSIF_STAR', 'epsilon'], ['ELSE_BIN', ['INSTR_PLUS', (0, 3)]],
                     [(0, 3), 'else'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangale'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], [(0, 9), 'if'], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'undebut'], [(2, 11), ';']]

        arbre = construire_arbre(parse_res)

        show.visualize_tree(arbre).render(filename='syntax_tree', directory='./output/basic', cleanup=True,
                                          format='png',
                                          engine='dot')
        show.visualize_tree_hor(arbre, orientation='LR').render(filename='syntax_tree_hor', directory='./output/basic',
                                                                cleanup=True, format='png', engine='dot')

    def test_ast_reduce(self):
        parse_res = [['F', [(0, 32), (2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2), 'DECL_STAR', (0, 11), 'IDENT',
                            (0, 18), (2, 11), (0, 31), (0, 26), (2, 11), (0, 31), (0, 28)]], [(0, 28), 'with'],
                     [(0, 31), 'ada.text_io'], [(2, 11), ';'], [(0, 26), 'use'], [(0, 31), 'ada.text_io'],
                     [(2, 11), ';'], [(0, 18), 'procedure'], ['IDENT', [(3, 0)]], [(3, 0), 'undebut'], [(0, 11), 'is'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], ['PARAMS_BIN', ['PARAMS']],
                     ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'],
                     ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'],
                     ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]],
                     [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'aire'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'airerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']], ['DECL', [(2, 11), 'IDENT_BIN', (0, 5), 'INSTR_PLUS', (0, 2),
                                                                     'DECL_STAR', (0, 11), 'TYPE', (0, 21),
                                                                     'PARAMS_BIN', 'IDENT', (0, 8)]],
                     [(0, 8), 'function'], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ['PARAMS_BIN', ['PARAMS']], ['PARAMS', [(2, 8), 'PARAM_POINT_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     ["PARAM_POINT_VIRG_PLUS'", ['PARAM_POINT_VIRG_PLUS', (2, 11)]], [(2, 11), ';'],
                     ['PARAM_POINT_VIRG_PLUS', ["PARAM_POINT_VIRG_PLUS'", 'PARAM']],
                     ['PARAM', ['TYPE', 'MODE_BIN', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['MODE_BIN', 'epsilon'], ['TYPE', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'integer'], ["PARAM_POINT_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     [(0, 21), 'return'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'integer'],
                     [(0, 11), 'is'], ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'larg'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", ["OPE5'", 'OPE6', 'ADD']], ['ADD', [(1, 0)]], [(1, 0), '+'],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'long'], ["EXPR''", 'epsilon'],
                     ["OPE6'", ["OPE6'", 'OPE7', 'MULT']], ['MULT', [(1, 2)]], [(1, 2), '*'], ['OPE7', ['OPE8']],
                     ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 2],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', [(2, 11), 'EXPR_BIN', (0, 21)]], [(0, 21), 'return'], ['EXPR_BIN', ['EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'p'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']],
                     ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'], [(2, 11), ';'],
                     ['DECL_STAR', ['DECL_STAR', 'DECL']],
                     ['DECL', [(2, 11), 'EXPR_EG_BIN', 'TYPE', (2, 10), 'IDENT_VIRG_PLUS']],
                     ['IDENT_VIRG_PLUS', ["IDENT_VIRG_PLUS'", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'],
                     ["IDENT_VIRG_PLUS'", 'epsilon'], [(2, 10), ':'], ['TYPE', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'integer'], ['EXPR_EG_BIN', 'epsilon'], [(2, 11), ';'], ['DECL_STAR', 'epsilon'],
                     [(0, 2), 'begin'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'choix'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']],
                     ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR',
                                                                [(2, 11), (0, 9), (0, 5), 'ELSE_BIN', 'ELSIF_STAR',
                                                                 'INSTR_PLUS', (0, 23), 'EXPR', (0, 9)]],
                     [(0, 9), 'if'], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'choix'], ["EXPR''", 'epsilon'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", ["OPE3'", 'OPE4', 'EGAL']], ['EGAL', [(1, 8)]], [(1, 8), '='],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']], ['ENTIER', [(4, 0)]], [(4, 0), 1],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(0, 23), 'then'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'perimetrerectangle'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], ['ELSIF_STAR', 'epsilon'], ['ELSE_BIN', ['INSTR_PLUS', (0, 3)]],
                     [(0, 3), 'else'], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']], ['INSTR', ["INSTR'", 'EXPR']],
                     ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']],
                     ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']],
                     ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["INSTR'", [(2, 11), 'EXPR', (1, 12)]], [(1, 12), ':='], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'airerectangale'],
                     ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 2], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", ['EXPR_VIRG_PLUS', (2, 9)]],
                     [(2, 9), ','], ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ['ENTIER']],
                     ['ENTIER', [(4, 0)]], [(4, 0), 3], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     [(2, 11), ';'], ["INSTR_PLUS'", ['INSTR_PLUS']], ['INSTR_PLUS', ["INSTR_PLUS'", 'INSTR']],
                     ['INSTR', ["INSTR'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']], ['OPE', ["OPE'", 'OPE1']],
                     ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']], ['OPE3', ["OPE3'", 'OPE4']],
                     ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']], ['OPE6', ["OPE6'", 'OPE7']],
                     ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]], ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'put'], ["EXPR''", [(2, 8), 'EXPR_VIRG_PLUS', (2, 7)]], [(2, 7), '('],
                     ['EXPR_VIRG_PLUS', ["EXPR_VIRG_PLUS'", 'EXPR']], ['EXPR', ['ACCESS', 'OPE']],
                     ['OPE', ["OPE'", 'OPE1']], ['OPE1', ["OPE1'", 'OPE2']], ['OPE2', ["OPE2'", 'OPE3']],
                     ['OPE3', ["OPE3'", 'OPE4']], ['OPE4', ["OPE4'", 'OPE5']], ['OPE5', ["OPE5'", 'OPE6']],
                     ['OPE6', ["OPE6'", 'OPE7']], ['OPE7', ['OPE8']], ['OPE8', ["EXPR'"]],
                     ["EXPR'", ["EXPR''", 'IDENT']], ['IDENT', [(3, 0)]], [(3, 0), 'valeur'], ["EXPR''", 'epsilon'],
                     ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'], ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'],
                     ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'], ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'],
                     ["EXPR_VIRG_PLUS'", 'epsilon'], [(2, 8), ')'], ["OPE6'", 'epsilon'], ["OPE5'", 'epsilon'],
                     ["OPE4'", 'epsilon'], ["OPE3'", 'epsilon'], ["OPE2'", 'epsilon'], ["OPE1'", 'epsilon'],
                     ["OPE'", 'epsilon'], ['ACCESS', 'epsilon'], ["INSTR'", [(2, 11)]], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], [(0, 9), 'if'], [(2, 11), ';'],
                     ["INSTR_PLUS'", 'epsilon'], [(0, 5), 'end'], ['IDENT_BIN', ['IDENT']], ['IDENT', [(3, 0)]],
                     [(3, 0), 'undebut'], [(2, 11), ';']]

        arbre = remonter_feuilles(elaguer_arbre(construire_arbre(parse_res)))
        remove_intermediary_node(arbre)
        remove_unless_node(arbre)

        show.visualize_tree(arbre).render(filename='prun_param_syntax_tree_param', directory='./output/reduced',
                                          cleanup=True, format='png', engine='dot')
        show.visualize_tree_hor(arbre, orientation='LR').render(filename='prun_param_syntax_tree_param_hor',
                                                                directory='./output/reduced', cleanup=True,
                                                                format='png',
                                                                engine='dot')


if __name__ == '__main__':
    unittest.main()
